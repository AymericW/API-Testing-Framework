{
  "openapi": "3.0.0",
  "info": {
    "title": "Product API",
    "description": "retrieves the list of products a user can pick depending on his age",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:8085/OCPL-pr90/rpc/v1",
      "description": "Local instance of OCPL-pr90"
    },
    {
      "url": "https://easybanking.testaccess.qabnpparibasfortis.be/OCPL-pr90/rpc/v1",
      "description": "Test OCPL-pr90"
    },
    {
      "url": "https://p1.easybanking.qabnpparibasfortis.be/OCPL-pr90/rpc/v1",
      "description": "QA+1 OCPL-pr90"
    }
  ],
  "paths": {
    "/prospects": {
      "post": {
        "summary": "Create a prospect",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospect"
              }
            }
          },
          "description": "partial prospect containing at least the required attributes"
        },
        "responses": {
          "200": {
            "description": "returns the freshly created prospect with an assigned id, status and identID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospect"
                }
              }
            }
          }
        }
      }
    },
    "/prospects/{id}": {
      "get": {
        "summary": "Get a specific prospect",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "prospect unique identifier",
            "example": "7fa15248-49b4-4ea7-bd64-fe00bff544c1"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospect"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Partially update a specific prospect",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "prospect unique identifier",
            "example": "7fa15248-49b4-4ea7-bd64-fe00bff544c1"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prospect"
              }
            }
          },
          "description": "partial prospect containing values to be updated"
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prospect"
                }
              }
            }
          }
        }
      }
    },
    "/prospects/{id}/status": {
      "get": {
        "summary": "Get the status of a specific prospect",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "prospect unique identifier",
            "example": "7fa15248-49b4-4ea7-bd64-fe00bff544c1"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Prospect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "prospect unique identifier",
            "example": "0a7a24c9-e295-42bc-b4bf-f179298ac0bf"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "language": {
            "type": "string",
            "enum": [
              "EN",
              "FR",
              "NL",
              "DE"
            ]
          },
          "brand": {
            "type": "string",
            "enum": [
              "FB",
              "HB"
            ]
          },
          "psp": {
            "type": "string",
            "description": "created customer unique identifier",
            "example": 15923532
          },
          "identId": {
            "type": "string",
            "description": "IDnow identification unique identifier",
            "example": "TS3-ACBJQ"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string",
            "example": "0470065842"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "idCard": {
            "$ref": "#/components/schemas/IdCard"
          },
          "product": {
            "type": "string",
            "description": "uniquer identifier for a product",
            "example": "CCOMF"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Status": {
        "type": "string",
        "enum": [
          "INITIAL",
          "ID_PENDING",
          "ID_RECEIVED",
          "ID_RECEIVED_ERROR",
          "CUSTOMER_VALIDATED",
          "CUSTOMER_VALIDATED_ERROR",
          "CUSTOMER_STEP",
          "CUSTOMER_STEP_ERROR",
          "ACCOUNT_STEP",
          "ACCOUNT_STEP_ERROR",
          "DEBIT_CARD_STEP",
          "DEBIT_CARD_STEP_ERROR",
          "EASY_BANKING_STEP",
          "EASY_BANKING_STEP_ERROR",
          "CUSTOMER_CREATED"
        ],
        "description": "current state of the prospect",
        "example": "ID_RECEIVED"
      },
      "IdCard": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "example": "593707586970"
          },
          "name": {
            "type": "string",
            "example": "Doe"
          },
          "firstNames": {
            "type": "string",
            "example": "John Foo"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "example": "1990-18-11"
          },
          "birthPlace": {
            "type": "string",
            "example": "Bruxelles"
          },
          "sex": {
            "enum": [
              "M",
              "F"
            ],
            "example": "M"
          },
          "nationality": {
            "type": "string",
            "example": "BE"
          },
          "nationalRegistryNumber": {
            "type": "string",
            "example": "90111850549"
          },
          "deliveryPlace": {
            "type": "string",
            "example": "Bruxelles"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2019-07-05"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2029-07-05"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "Rue du progrï¿½s"
          },
          "number": {
            "type": "string",
            "example": 55
          },
          "box": {
            "type": "string"
          },
          "postalCode": {
            "type": "string",
            "example": "1210"
          },
          "city": {
            "type": "string",
            "example": "Saint-Josse-ten-Noode"
          },
          "country": {
            "type": "string",
            "example": "Belgium"
          }
        }
      }
    }
  }
}